.. _testlist:
===============
Test-List Spec
===============

This chapter will discuss the syntax and structure of the test list files generated by the generator plugins.

.. note:: The test list contains all nececssary info about the tests.

Configuration options for test_list
####################################

The idea behind having a test list (YAML), is to avoid wondering about the low-level options selected by the additional tools to compile and link the programs.
Like an intermediate representation, it can be used to run various tests from one machine to other ones.

  - **work_dir** : The work directory containing the ASM files for the test.
  - **isa** : ISA for the test.
  - **march** : Architecture of the DuT to be tested
  - **mabi** : ABI(Application Binary Interface) for the test
  - **cc** : Compiler command
  - **generator** : The plugin that generators the file
  - **cc_args** : Compiler extra arguments
  - **linker_args** : Linker args
  - **linker_file** : File to use for linking things
  - **asm_file** : The ASM file that is generated for the test
  - **extra_compile** : If anything more to compile like CRT files etc
  - **include**: Include custom headers or asm files from a folder


.. note:: All the files contain an *absolute* path.

Test-List Validation
####################

These plugins have a YAML Schema that needs to be verified, this part is handled by the framework itself.

.. autofunction:: river_core.constants.YamlValidator


The current schema looks like this:

.. literalinclude:: ../../river_core/constants.py
   :language: python
   :lines: 8-58
