RISCV-CTG
=========

`RISCV-CTG <https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg>`_ plugin is based on the tool developed by Incore Semiconductors to generate tests used in the official `RISC-V Architectural Test Suite <https://github.com/riscv/riscv-compliance>`_ and the RISC-V architectural test framework `RISCOF <https://riscof.readthedocs.io>`_.
All tests generated by the CTG are compliant with the official `Test Format Spec <https://riscof.readthedocs.io/en/latest/testformat.html>`_.

Installation
------------
1. Install `RISCV-CTG`


   The easiest way to  install `riscv-ctg` is to use `pip`.

   .. code-block:: console
       
       $ pip install riscv_ctg

   To stay up-to date with the latest developments and fixes you can use the development version.

   .. code-block:: console
       
       $ git clone https://github.com/riscv/riscv-ctg
       $ cd riscv-ctg
       $ pip3 install --editable .

   This will install `riscv-ctg` on your path.

2. Download the pre-built ``ctg_plugin`` from `river_core_plugins`

   The ``ctg_plugin`` can be found in the Generator plugins repo in the ``river_core_plugins`` repository.

   .. code-block:: console
       
       $ git clone https://gitlab.com/incoresemi/river-framework/core-verification/river_core_plugins 
       $ cd generator_plugins/ctg_plugin/

Configuring the Plugin
----------------------

A YAML file is placed in the ctg plugin folder with the name ``ctg_gen_config.yaml``.

The YAML file if pre-configured with some default values.

Each block begins with the ISA to load and then the following options:

- `bisa` or `base isa`.
- `absolute` (??)
- `cgfs` -> CGF files that needed be loaded into `riscv-ctg`

.. code-block:: yaml

      rv32e:
      bisa: rv32e
      absolute: false
      cgfs:
         - cgfs/dataset.cgf
         - cgfs/rv32i.cgf

      rv32em:
      bisa: rv32e
      absolute: false
      cgfs:
         - cgfs/dataset.cgf
         - cgfs/rv32i.cgf
         - cgfs/rv32im.cgf

      rv32emc:
      bisa: rv32e
      absolute: false
      cgfs:
         - cgfs/dataset.cgf
         - cgfs/rv32i.cgf
         - cgfs/rv32im.cgf
         - cgfs/rv32imc.cgf


Output from the plugin
----------------------

The gen hook of the plugin must return a dictionary of the test and their attributes as defined by
the :ref:`Test List Format <testlist>`.

Instance in ``config.ini``
--------------------------

To use RISCV_CTG in the config.ini the following template can be followed:

.. code-block:: ini

   path_to_suite = ~/river_core_plugins/generator_plugins
   generator = ctg

   [ctg]
   # Number of jobs to use to generate the tests
   jobs = 8
   # number of tests per selected config file
   count = 1
   # path to any gen_config yaml which can be used by the CTG plugin as described above.
   ctg_gen_config = ~/river_core_plugins/generator_plugins/ctg_plugin/ctg_gen_config.yaml
   # enable Randomization for CTG
   randomize = True
   # The test to run from the available cgfs
   test_cgf = rv32i


.. note:: one can maintain multiple \*_gen_config.yaml files and simple point to them in the main
   config.ini to change configurations. 
